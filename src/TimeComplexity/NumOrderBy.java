package TimeComplexity;

public class NumOrderBy {
    public void main(String[] args) {
        // 시간 복잡도는 알고리즘의 기준이 됨.

        // 시간 복잡도는 해결하기 위한 연산 횟수를 말함
        // 알고리즘 테스트는 시간제한이 보통 2초정도 됨 (2억번의  연산 안에 답이 나와야함)

        // 빅-오메가 : 최선일 때의 연산 횟수를 만함
        // 빅-세타 : 보통일 때의 연산 횟수를 말함
        // 빅-오 : 최악일 때의 연산 횟수를 말함 -> 빅-오일때를 가정하고 테스트를 풀어야함

        // 중첩 for 문은 시간 복잡도에서 쓰지 않는다 생각해야함


        //즉 ,
        // 1. 알맞는 알고리즘 선택기준
        // 2. 비효율적인 로직 찾아서 효율적으로 바꾸기
    }
}